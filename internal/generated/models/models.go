// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0

package models

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/google/uuid"
)

type Gender string

const (
	GenderMale   Gender = "male"
	GenderFemale Gender = "female"
	GenderOther  Gender = "other"
)

func (e *Gender) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Gender(s)
	case string:
		*e = Gender(s)
	default:
		return fmt.Errorf("unsupported scan type for Gender: %T", src)
	}
	return nil
}

type NullGender struct {
	Gender Gender
	Valid  bool // Valid is true if Gender is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullGender) Scan(value interface{}) error {
	if value == nil {
		ns.Gender, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Gender.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullGender) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Gender), nil
}

type Vo2AthleteMeasurementSource string

const (
	Vo2AthleteMeasurementSourceLabTest   Vo2AthleteMeasurementSource = "lab_test"
	Vo2AthleteMeasurementSourceFieldTest Vo2AthleteMeasurementSource = "field_test"
	Vo2AthleteMeasurementSourceManual    Vo2AthleteMeasurementSource = "manual"
)

func (e *Vo2AthleteMeasurementSource) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Vo2AthleteMeasurementSource(s)
	case string:
		*e = Vo2AthleteMeasurementSource(s)
	default:
		return fmt.Errorf("unsupported scan type for Vo2AthleteMeasurementSource: %T", src)
	}
	return nil
}

type NullVo2AthleteMeasurementSource struct {
	Vo2AthleteMeasurementSource Vo2AthleteMeasurementSource
	Valid                       bool // Valid is true if Vo2AthleteMeasurementSource is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVo2AthleteMeasurementSource) Scan(value interface{}) error {
	if value == nil {
		ns.Vo2AthleteMeasurementSource, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Vo2AthleteMeasurementSource.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVo2AthleteMeasurementSource) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Vo2AthleteMeasurementSource), nil
}

type Vo2AthleteMeasurementType string

const (
	Vo2AthleteMeasurementTypeLt1    Vo2AthleteMeasurementType = "lt1"
	Vo2AthleteMeasurementTypeLt2    Vo2AthleteMeasurementType = "lt2"
	Vo2AthleteMeasurementTypeVo2max Vo2AthleteMeasurementType = "vo2max"
	Vo2AthleteMeasurementTypeWeight Vo2AthleteMeasurementType = "weight"
)

func (e *Vo2AthleteMeasurementType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Vo2AthleteMeasurementType(s)
	case string:
		*e = Vo2AthleteMeasurementType(s)
	default:
		return fmt.Errorf("unsupported scan type for Vo2AthleteMeasurementType: %T", src)
	}
	return nil
}

type NullVo2AthleteMeasurementType struct {
	Vo2AthleteMeasurementType Vo2AthleteMeasurementType
	Valid                     bool // Valid is true if Vo2AthleteMeasurementType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVo2AthleteMeasurementType) Scan(value interface{}) error {
	if value == nil {
		ns.Vo2AthleteMeasurementType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Vo2AthleteMeasurementType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVo2AthleteMeasurementType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Vo2AthleteMeasurementType), nil
}

type Vo2ProviderConnectionType string

const (
	Vo2ProviderConnectionTypeOauth2 Vo2ProviderConnectionType = "oauth2"
)

func (e *Vo2ProviderConnectionType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Vo2ProviderConnectionType(s)
	case string:
		*e = Vo2ProviderConnectionType(s)
	default:
		return fmt.Errorf("unsupported scan type for Vo2ProviderConnectionType: %T", src)
	}
	return nil
}

type NullVo2ProviderConnectionType struct {
	Vo2ProviderConnectionType Vo2ProviderConnectionType
	Valid                     bool // Valid is true if Vo2ProviderConnectionType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullVo2ProviderConnectionType) Scan(value interface{}) error {
	if value == nil {
		ns.Vo2ProviderConnectionType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Vo2ProviderConnectionType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullVo2ProviderConnectionType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Vo2ProviderConnectionType), nil
}

// Endurance activities
type Vo2ActivitiesEndurance struct {
	ID                    uuid.UUID
	ProviderID            int32
	UserID                uuid.UUID
	ProviderRawActivityID uuid.UUID
	// Name of the activity, as given by the original provider.
	Name string
	// Description of the activity, as given by the original provider.
	Description sql.NullString
	// Sport type of the activity. Endurance activities are: running, cycling, gravel cycling, hiking, trail running, elliptical, swimming, stair-stepper, and inline-skating.
	Sport string
	// Start time of the activity. Measured in UTC.
	StartTime time.Time
	// End time of the activity. Measured in UTC.
	EndTime time.Time
	// IANA timezone of the activity.
	IanaTimezone sql.NullString
	// UTC offset of the activity. Measured in seconds.
	UtcOffset sql.NullInt32
	// The overall elapsed time of the activity. Measured in seconds.
	ElapsedTime int32
	// The overall moving time of the activity. Measured in seconds.
	MovingTime int32
	// Distance of the activity. Measured in meters.
	Distance int32
	// Elevation gain of the activity. Measured in meters.
	ElevGain sql.NullInt32
	// Elevation loss of the activity. Measured in meters.
	ElevLoss sql.NullInt32
	// Average speed of the activity. Measured in meters per second.
	AvgSpeed float64
	// Average heart rate during the activity. Measured in beats per minute.
	AvgHr sql.NullInt32
	// Maximum heart rate during the activity. Measured in beats per minute.
	MaxHr sql.NullInt32
	// Summary polyline of the activity. Encoded in Google Polyline format.
	SummaryPolyline sql.NullString
	// Summary postgis geometry route of the activity.
	SummaryRoute interface{}
	// URI of the GPX file of the activity.
	GpxFileUri sql.NullString
	// URI of the FIT file of the activity.
	FitFileUri sql.NullString
	CreatedAt  sql.NullTime
	UpdatedAt  sql.NullTime
	DeletedAt  sql.NullTime
}

type Vo2ActivitiesEnduranceTag struct {
	ActivityID uuid.UUID
	TagID      int32
}

type Vo2ActivitiesThresholdAnalysis struct {
	ID                  int32
	ActivityEnduranceID uuid.UUID
	TimeAtLt1Threshold  int32
	TimeAtLt2Threshold  int32
	RawAnalysis         json.RawMessage
	CreatedAt           sql.NullTime
	UpdatedAt           sql.NullTime
	DeletedAt           sql.NullTime
}

type Vo2ActivityTag struct {
	ID          int32
	Name        string
	Description sql.NullString
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
	DeletedAt   sql.NullTime
}

type Vo2Athlete struct {
	ID          uuid.UUID
	UserID      uuid.UUID
	Age         int16
	HeightCm    int16
	Country     string
	Gender      Gender
	FirstName   string
	LastName    string
	DisplayName string
	Email       string
	CreatedAt   sql.NullTime
	UpdatedAt   sql.NullTime
	DeletedAt   sql.NullTime
}

type Vo2AthleteCurrentMeasurement struct {
	AthleteID          uuid.UUID
	Lt1Value           sql.NullFloat64
	Lt1MeasuredAt      sql.NullTime
	Lt1IanaTimezone    sql.NullString
	Lt1Source          NullVo2AthleteMeasurementSource
	Lt1Notes           sql.NullString
	Lt2Value           sql.NullFloat64
	Lt2MeasuredAt      sql.NullTime
	Lt2IanaTimezone    sql.NullString
	Lt2Source          NullVo2AthleteMeasurementSource
	Lt2Notes           sql.NullString
	Vo2maxValue        sql.NullFloat64
	Vo2maxMeasuredAt   sql.NullTime
	Vo2maxIanaTimezone sql.NullString
	Vo2maxSource       NullVo2AthleteMeasurementSource
	Vo2maxNotes        sql.NullString
	WeightValue        sql.NullFloat64
	WeightMeasuredAt   sql.NullTime
	WeightIanaTimezone sql.NullString
	WeightSource       NullVo2AthleteMeasurementSource
	WeightNotes        sql.NullString
}

type Vo2AthleteMeasurementHistory struct {
	ID           uuid.UUID
	AthleteID    uuid.UUID
	MeasuredAt   time.Time
	IanaTimezone string
	MetricType   Vo2AthleteMeasurementType
	Value        float64
	Source       Vo2AthleteMeasurementSource
	Notes        sql.NullString
	CreatedAt    sql.NullTime
	UpdatedAt    sql.NullTime
	DeletedAt    sql.NullTime
}

type Vo2Provider struct {
	ID             int32
	Name           string
	Slug           string
	ConnectionType Vo2ProviderConnectionType
	Description    sql.NullString
	CreatedAt      sql.NullTime
	UpdatedAt      sql.NullTime
	DeletedAt      sql.NullTime
}

type Vo2ProviderActivityRawDatum struct {
	ID                  uuid.UUID
	ProviderID          int32
	UserID              uuid.UUID
	ProviderActivityID  string
	StartTime           time.Time
	ElapsedTime         int32
	IanaTimezone        sql.NullString
	UtcOffset           sql.NullInt32
	Data                json.RawMessage
	DetailedActivityUri sql.NullString
	CreatedAt           sql.NullTime
	UpdatedAt           sql.NullTime
	DeletedAt           sql.NullTime
}

type Vo2ProviderOauth2Credential struct {
	ID           int32
	ProviderID   int32
	UserID       uuid.UUID
	AccessToken  string
	RefreshToken string
	ExpiresAt    time.Time
	CreatedAt    sql.NullTime
	UpdatedAt    sql.NullTime
	DeletedAt    sql.NullTime
}

type Vo2User struct {
	ID             uuid.UUID
	ProviderID     int32
	UserExternalID string
	CreatedAt      sql.NullTime
	UpdatedAt      sql.NullTime
	DeletedAt      sql.NullTime
}

type Vo2WebhookVerification struct {
	ID        int32
	Token     string
	CreatedAt sql.NullTime
	ExpiresAt time.Time
}
